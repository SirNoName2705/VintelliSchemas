{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "ModInfo",
  "type": "object",
  "description": "Meta data for a specific mod folder, archive, source file or assembly.\nEither loaded from a \"modinfo.json\" or from the assembly's\nModInfoAttribute.",
  "required": [
    "name",
    "type"
  ],
  "properties": {
    "authors": {
      "type": "array",
      "description": "Names of people working on this mod. (optional) ",
      "items": {
        "type": "string"
      }
    },
    "contributors": {
      "type": "array",
      "description": "Names of people contributing to this mod. (optional) ",
      "items": {
        "type": "string"
      }
    },
    "coreMod": {
      "type": "boolean",
      "description": "Not exposed as a JsonProperty, only coded mods can set this to true "
    },
    "dependencies": {
      "type": "array",
      "description": "List of mods (and versions) this mod depends on. ",
      "items": {
        "$ref": "#/definitions/ModDependency"
      }
    },
    "description": {
      "type": "string",
      "description": "A short description of what this mod does. (optional) "
    },
    "modID": {
      "type": "string",
      "description": "The mod id (domain) of this mod. For example \"myexamplemod\".\n(Optional. Uses mod name (converted to lowercase, stripped of\nwhitespace and special characters) if missing.)"
    },
    "name": {
      "type": "string",
      "description": "The name of this mod. For example \"My Example Mod\". "
    },
    "networkVersion": {
      "type": "string",
      "description": "The network version of this mod. Change this number when a user that has an older version of your mod should not be allowed to connected to server with a newer version. If not set, the version value is used."
    },
    "requiredOnClient": {
      "type": "boolean",
      "description": "If set to false and the mod is universal, clients don't need the mod\nto join. (Optional. True by default.)"
    },
    "requiredOnServer": {
      "type": "boolean",
      "description": "If set to false and the mod is universal, the mod is not disabled\nif it's not present on the server. (Optional. True by default.)"
    },
    "side": {
      "description": "Which side(s) this mod runs on. Can be \"Server\", \"Client\" or \"Universal\".\n(Optional. Universal (both server and client) by default.)",
      "oneOf": [
        {
          "$ref": "#/definitions/EnumAppSide"
        }
      ]
    },
    "textureSize": {
      "type": "integer",
      "description": "If the mod is a texture pack that changes topsoil grass textures, define the texture size here",
      "format": "int32"
    },
    "type": {
      "description": "The type of this mod. Can be \"Theme\", \"Content\" or \"Code\". ",
      "oneOf": [
        {
          "$ref": "#/definitions/EnumModType"
        }
      ]
    },
    "version": {
      "type": "string",
      "description": "The version of this mod. For example \"2.10.4\". (optional) "
    },
    "website": {
      "type": "string",
      "description": "Location of the website or project site of this mod. (optional) "
    }
  },
  "definitions": {
    "ModDependency": {
      "type": "object",
      "description": "Represents a mod dependency requirement of one mod for another.",
      "properties": {
        "modID": {
          "type": "string",
          "description": "The required mod id (domain) of this dependency. "
        },
        "version": {
          "type": "string",
          "description": "The minimum version requirement of this dependency.\nMay be empty if the no specific version is required."
        }
      }
    },
    "EnumAppSide": {
      "type": "string",
      "description": "",
      "x-enumFlags": true,
      "x-enumNames": [
        "Server",
        "Client",
        "Universal"
      ],
      "enum": [
        "server",
        "client",
        "universal"
      ]
    },
    "EnumModType": {
      "type": "string",
      "description": "Describes the type of a mod. Allows easy recognition and limiting of\nwhat any particular mod can do.",
      "x-enumNames": [
        "Theme",
        "Content",
        "Code"
      ],
      "enum": [
        "theme",
        "content",
        "code"
      ]
    }
  }
}